<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%!
public static class AssetIndexer extends BaseAlloyIndexer {

	public static AssetIndexer getInstance() {
		return _instance;
	}

	@Override
	public void postProcessSearchQuery(BooleanQuery searchQuery, SearchContext searchContext) throws Exception {
		addSearchTerm(searchQuery, searchContext, "active", false);
		addSearchTerm(searchQuery, searchContext, "manufacturer", true);
		addSearchTerm(searchQuery, searchContext, "model", true);
		addSearchTerm(searchQuery, searchContext, "serialNumber", false);
		addSearchTerm(searchQuery, searchContext, "type", true);
	}

	@Override
	protected Document doGetDocument(Object obj) throws Exception {
		Asset asset = (Asset)obj;

		Document document = getBaseModelDocument(portletId, asset);

		if (asset.isActive()) {
			document.addText("active", "active");
		}
		else {
			document.addText("active", "inactive");
		}

		document.addKeyword("serialNumber", asset.getSerialNumber());

		Definition definition = DefinitionLocalServiceUtil.fetchDefinition(asset.getDefinitionId());

		if (definition != null) {
			document.addText("manufacturer", definition.getManufacturer());
			document.addText("model", definition.getModel());

			Type type = TypeLocalServiceUtil.fetchType(definition.getTypeId());

			if (type != null) {
				document.addText("model", type.getName());
			}
		}

		return document;
	}

	@Override
	protected Summary doGetSummary(Document document, Locale locale, String snippet, PortletURL portletURL) {
		String title = document.get(Field.ENTRY_CLASS_PK);

		String content = null;

		portletURL.setParameter("mvcPath", "/WEB-INF/jsp/ams/views/assets/view.jsp");

		String assetId = document.get(Field.ENTRY_CLASS_PK);

		portletURL.setParameter("id", assetId);

		return new Summary(title, content, portletURL);
	}

	private AssetIndexer() {
		setClassName(Asset.class.getName());
		setPortletId(PortletKeys.AMS);
	}

	private static AssetIndexer _instance = new AssetIndexer();

}
%>