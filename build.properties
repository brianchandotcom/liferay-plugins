##
## DO NOT EDIT THIS FILE.
##
## To update the properties of this file, create a separate properties file
## named "build.${user.name}.properties" with the properties to overwrite.
##

##
## Application Server
##

    #
    # The default settings are for Tomcat. Additional settings are left
    # commented out as examples.
    #

    #
    # Specify the paths to an unzipped Geronimo bundle.
    #
    #app.server.type=geronimo
    #app.server.dir=${project.dir}/../bundles/geronimo-2.2.1
    #app.server.deploy.dir=${app.server.dir}/deploy
    #app.server.lib.global.dir=${app.server.dir}/var/shared/lib
    #app.server.portal.dir=${app.server.dir}/deploy/liferay-portal

    #
    # Specify the paths to an unzipped Glassfish bundle.
    #
    #app.server.type=glassfish
    #app.server.dir=${project.dir}/../bundles/glassfish-3.1.2.2
    #app.server.deploy.dir=${app.server.dir}/autodeploy
    #app.server.lib.global.dir=${app.server.dir}/domains/domain1/lib
    #app.server.portal.dir=${app.server.dir}/domains/domain1/applications/liferay-portal

    #
    # Specify the paths to an unzipped JBoss bundle.
    #
    #app.server.type=jboss
    #app.server.dir=${project.dir}/../bundles/jboss-7.1.1
    #app.server.deploy.dir=${app.server.dir}/standalone/deployments
    #app.server.lib.global.dir=${app.server.dir}/modules/com/liferay/portal/main
    #app.server.portal.dir=${app.server.dir}/standalone/deployments/ROOT.war

    #
    # Specify the paths to an unzipped Jetty bundle.
    #
    #app.server.type=jetty
    #app.server.dir=${project.dir}/../bundles/jetty-7.6.3
    #app.server.deploy.dir=${app.server.dir}/webapps
    #app.server.lib.global.dir=${app.server.dir}/lib/ext/liferay
    #app.server.portal.dir=${app.server.dir}/webapps/root

    #
    # Specify the paths to an unzipped JOnAS bundle.
    #
    #app.server.type=jonas
    #app.server.dir=${project.dir}/../bundles/jonas-5.2.3
    #app.server.deploy.dir=${app.server.dir}/deploy
    #app.server.lib.global.dir=${app.server.dir}/lib/ext
    #app.server.portal.dir=${app.server.dir}/deploy/liferay-portal

    #
    # Specify the paths to an unzipped Resin bundle.
    #
    #app.server.type=resin
    #app.server.dir=${project.dir}/../bundles/resin-4.0.29
    #app.server.deploy.dir=${app.server.dir}/webapps
    #app.server.lib.global.dir=${app.server.dir}/ext-lib
    #app.server.portal.dir=${app.server.dir}/webapps/ROOT

    #
    # Specify the paths to an unzipped Tomcat bundle.
    #
    app.server.type=tomcat
    app.server.dir=${project.dir}/../bundles/tomcat-7.0.27
    app.server.deploy.dir=${app.server.dir}/webapps
    app.server.lib.global.dir=${app.server.dir}/lib/ext
    app.server.portal.dir=${app.server.dir}/webapps/ROOT

    #
    # Specify the paths to a WebLogic domain with Liferay installed.
    #
    #app.server.type=weblogic
    #app.server.dir=${project.dir}/../bundles/weblogic-10.3.6
    #app.server.deploy.dir=${app.server.dir}/domains/liferay/autodeploy
    #app.server.lib.global.dir=${app.server.dir}/domains/liferay/lib
    #app.server.portal.dir=${app.server.dir}/domains/liferay/autodeploy/ROOT

    #
    # Specify the paths to a WebSphere profile with Liferay installed.
    #
    #app.server.type=websphere
    #app.server.dir=${project.dir}/../bundles/websphere-7.0
    #app.server.deploy.dir=${app.server.dir}/profiles/liferay/wsadmin-deploy
    #app.server.lib.global.dir=${app.server.dir}/lib/ext
    #app.server.portal.dir=${app.server.dir}/profiles/liferay/installedApps/liferay-cell/liferay-portal.ear/liferay-portal.war

##
## Auto Deploy
##

    #
    # Plugins will be deployed to this directory. Make sure that Liferay is
    # also set to scan this directory.
    #
    auto.deploy.dir=${app.server.dir}/../deploy

    #
    # Set this to true if deployed WARs are unpacked. Set this to false your
    # application server has concurrency issues with deploying large WARs.
    #
    auto.deploy.unpack.war=true

    #
    # Set this to true if you want the deployer to rename portlet.xml to
    # portlet-custom.xml. This is only needed when deploying the portal on
    # WebSphere 6.1.x with a version before 6.1.0.7 because WebSphere's portlet
    # container will try to process a portlet at the same time that Liferay is
    # trying to process a portlet.
    #
    auto.deploy.custom.portlet.xml=false

##
## Compiler
##

    ant.build.javac.source=1.5
    ant.build.javac.target=1.5

    #javac.compiler=modern
    javac.compiler=org.eclipse.jdt.core.JDTCompilerAdapter

    javac.debug=on
    javac.deprecation=off
    javac.encoding=ISO-8859-1
    javac.nowarn=on

##
## Database
##

    #
    # Set the database name used by the SQL scripts.
    #
    database.name=lportal

    #
    # Set the database server types to build SQL scripts for.
    #
    database.types=db2,derby,firebird,hypersonic,informix,ingres,interbase,jdatastore,mysql,oracle,postgresql,sap,sqlserver,sybase
    #database.types=mysql

##
## Dependencies
##

    dependency.jar.urls[icefaces]=\
        http://repo1.maven.org/maven2/org/icefaces/icefaces/3.0.1/icefaces-3.0.1.jar,\
        http://repo1.maven.org/maven2/org/icefaces/icefaces-ace/3.0.1/icefaces-ace-3.0.1.jar

    dependency.jar.urls[jsf]=\
        https://repository.jboss.org/nexus/content/repositories/releases/org/jboss/el/jboss-el/2.0.1.GA/jboss-el-2.0.1.GA.jar,\
        http://repo1.maven.org/maven2/com/sun/faces/jsf-api/2.1.3-b02/jsf-api-2.1.3-b02.jar,\
        http://repo1.maven.org/maven2/com/sun/faces/jsf-impl/2.1.3-b02/jsf-impl-2.1.3-b02.jar,\
        http://central.maven.org/maven2/com/liferay/faces/liferay-faces-bridge-api/3.1.1-ga2/liferay-faces-bridge-api-3.1.1-ga2.jar,\
        http://central.maven.org/maven2/com/liferay/faces/liferay-faces-bridge-impl/3.1.1-ga2/liferay-faces-bridge-impl-3.1.1-ga2.jar,\
        http://central.maven.org/maven2/com/liferay/faces/liferay-faces-portal/3.1.1-ga2/liferay-faces-portal-3.1.1-ga2.jar,\
        http://central.maven.org/maven2/com/liferay/faces/liferay-faces-util/3.1.1-ga2/liferay-faces-util-3.1.1-ga2.jar

    dependency.jar.urls[liferay_faces_alloy]=\
        http://central.maven.org/maven2/com/liferay/faces/liferay-faces-alloy/3.1.1-ga2/liferay-faces-alloy-3.1.1-ga2.jar

    dependency.jar.urls[primefaces]=\
        http://repository.primefaces.org/org/primefaces/primefaces/3.3/primefaces-3.3.jar

    dependency.jar.urls[richfaces]=\
        http://repo1.maven.org/maven2/net/sourceforge/cssparser/cssparser/0.9.5/cssparser-0.9.5.jar,\
        http://repo1.maven.org/maven2/com/google/guava/guava/10.0.1/guava-10.0.1.jar,\
        http://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar,\
        http://repo1.maven.org/maven2/org/richfaces/ui/richfaces-components-api/4.2.0.Final/richfaces-components-api-4.2.0.Final.jar,\
        http://repo1.maven.org/maven2/org/richfaces/ui/richfaces-components-ui/4.2.0.Final/richfaces-components-ui-4.2.0.Final.jar,\
        http://repo1.maven.org/maven2/org/richfaces/core/richfaces-core-api/4.2.0.Final/richfaces-core-api-4.2.0.Final.jar,\
        http://repo1.maven.org/maven2/org/richfaces/core/richfaces-core-impl/4.2.0.Final/richfaces-core-impl-4.2.0.Final.jar,\
        http://repo1.maven.org/maven2/org/w3c/css/sac/1.3/sac-1.3.jar

    scala.compiler.url=http://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.9.2/scala-compiler-2.9.2.jar

##
## Extension Environment
##

    #ext.work.dir=

##
## JUnit
##

    junit.debug.jpda=
    #junit.debug.jpda=-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y

    junit.halt.on.failure=false

##
## Libraries
##

    required.portal.jars=commons-logging.jar,log4j.jar,util-bridges.jar,util-java.jar,util-taglib.jar

##
## Operating Systems
##

    os.apple=Mac OS X
    os.unix=Linux,FreeBSD,Solaris,SunOS
    os.windows=Windows 95,Windows 98,Windows NT,Windows 2000,Windows 2003,Windows XP,Windows Vista,Windows 7

##
## Plugins
##

    #
    # Set the excludes and includes attributes. These attributes are read when
    # you run "ant" from the layouttpl, portlets, or themes directory. By
    # default, the ant task will go through every subdirectory. Setting these
    # attributes can limit it to just the plugins you're working on.
    #
    plugins.excludes=
    plugins.includes=*

    #
    # Set the excludes and includes attributes for converting a bundle that has
    # the portal and a set of deployed plugins into an EAR file. The web
    # applications that match these attributes will be included into the
    # generated liferay-portal.ear via the command "ant ear".
    #
    # For example, if you are using Tomcat, then the directory specified in
    # the property "app.server.deploy.dir" will point to
    # ${app.server.dir}/webapps by default. Running "ant ear" will create an EAR
    # based on all the WARs in that directory with names that match the excludes
    # and includes from these two properties.
    #
    plugins.ear.excludes=
    plugins.ear.includes=tunnel-web

    #
    # Set this to true to generate a source ZIP file when creating a plugin WAR
    # file.
    #
    plugins.src.zip.enabled=false

    #
    # Set the excludes attributes to specify files that will be excluded from a
    # plugin WAR.
    #
    #plugins.war.excludes=**/WEB-INF/service/**,**/WEB-INF/src/**

##
## Version
##

    #
    # Set the version of Liferay Portal that these plugins are designed for.
    #
    lp.version=6.2.0
    lp.version.file.suffix=