<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-servers" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-common.xml" />

	<basename file="${app.server.zip.url}" property="app.server.zip.name" suffix=".zip" />

	<antelope:stringutil property="app.server.zip.version" string="${app.server.zip.name}">
		<replace regex="liferay-portal-${app.server.type}-" replacement="" />
	</antelope:stringutil>

	<if>
		<isset property="project.name" />
		<then>
			<property location="${project.dir}/../../projects/${project.name}/${app.server.zip.version}/liferay-portal-${app.server.type}" name="liferay-cli.app.server.parent.dir" />
		</then>
	</if>

	<target name="create-project">
		<if>
			<not>
				<isset property="project.name" />
			</not>
			<then>
				<fail>
.

Failed to create project. Please specify a project name.

Usage: create-project &lt;project.name&gt;
				</fail>
			</then>
		</if>

		<propertyfile file="${project.dir}/build.liferay-cli.properties">
			<entry key="project.name" value="${project.name}" />
		</propertyfile>

		<mkdir dir="${project.dir}/../../projects/${project.name}" />
	</target>

	<target name="delete-project">
		<if>
			<not>
				<isset property="project.name" />
			</not>
			<then>
				<fail>
.

Failed to delete project. Please specify a project name.

Usage: delete-project &lt;project.name&gt;
				</fail>
			</then>
		</if>

		<propertyfile file="${project.dir}/build.liferay-cli.properties">
			<entry key="app.server.parent.dir" operation="del" />
			<entry key="app.server.type" operation="del" />
			<entry key="project.name" operation="del" />
		</propertyfile>

		<delete dir="${project.dir}/../../projects/${project.name}" />
	</target>

	<target name="help">
		<property name="project.name" value="" />

		<echo>
Current Application Server: ${app.server.type}
Current Project: ${project.name}

Available Options:</echo>

		<if>
			<equals arg1="${project.name}" arg2="" />
			<then>
				<echo>
	create-project
	delete-project
	list-projects
	select-project
				</echo>
			</then>
			<else>
				<echo>
	install
	start
				</echo>
			</else>
		</if>
	</target>

	<target name="install">
		<if>
			<not>
				<isset property="project.name" />
			</not>
			<then>
				<fail>
.

Failed to select project. Please specify a project name.

Usage: select-project &lt;project.name&gt;
				</fail>
			</then>
		</if>

		<delete dir="${project.dir}/../../projects/${project.name}/${app.server.zip.version}/liferay-portal-${app.server.type}" />

		<if>
			<not>
				<available file="${project.dir}/../../bundles/${app.server.zip.version}/liferay-portal-${app.server.type}.zip" />
			</not>
			<then>
				<mkdir dir="${project.dir}/../../bundles/${app.server.zip.version}" />

				<get
					dest="${project.dir}/../../bundles/${app.server.zip.version}/liferay-portal-${app.server.type}.zip"
					src="${app.server.zip.url}"
					verbose="true"
				/>
			</then>
		</if>

		<antelope:stringutil string="${app.server.zip.version}" property="app.server.zip.version.endindex">
			<lastindexof string="-" />
		</antelope:stringutil>

		<antelope:stringutil string="${app.server.zip.version}" property="app.server.zip.version.without.timestamp">
			<substring endindex="${app.server.zip.version.endindex}" />
		</antelope:stringutil>

		<unzip
			dest="${project.dir}/../../projects/${project.name}/${app.server.zip.version}/liferay-portal-${app.server.type}"
			src="${project.dir}/../../bundles/${app.server.zip.version}/liferay-portal-${app.server.type}.zip"
		>
			<mapper>
				<globmapper
					from="liferay-portal-${app.server.zip.version.without.timestamp}/*"
					to="*"
				/>
			</mapper>
		</unzip>

		<chmod perm="a+x">
			<fileset dir="${project.dir}/../../projects/${project.name}/${app.server.zip.version}/liferay-portal-${app.server.type}">
				<include name="**/*.sh" />
			</fileset>

			<fileset dir="${project.dir}/../../projects/${project.name}/${app.server.zip.version}/liferay-portal-${app.server.type}">
				<exclude name="**/*.*" />
			</fileset>
		</chmod>

		<propertyfile file="${project.dir}/build.liferay-cli.properties">
			<entry key="app.server.parent.dir" value="${liferay-cli.app.server.parent.dir}" />
			<entry key="app.server.type" value="${app.server.type}" />
		</propertyfile>
	</target>

	<target name="list-projects">
		<dirset dir="${project.dir}/../../projects/" id="project.list" includes="*" />

		<for delimiter=";" list="${toString:project.list}" param="project.list.element">
			<sequential>
				<echo>@{project.list.element}${line.separator}</echo>
			</sequential>
		</for>
	</target>

	<target name="select-app-server">
		<propertyfile file="${project.dir}/build.liferay-cli.properties">
			<entry key="app.server.type" value="${app.server.type}" />
		</propertyfile>

		<if>
			<isset property="project.name" />
			<then>
				<propertyfile file="${project.dir}/build.liferay-cli.properties">
					<entry key="app.server.parent.dir" value="${liferay-cli.app.server.parent.dir}" />
				</propertyfile>
			</then>
		</if>
	</target>

	<target name="select-project">
		<if>
			<not>
				<isset property="project.name" />
			</not>
			<then>
				<fail>
.

Failed to select project. Please specify a project name.

Usage: select-project &lt;project.name&gt;
				</fail>
			</then>
		</if>

		<propertyfile file="${project.dir}/build.liferay-cli.properties">
			<entry key="app.server.parent.dir" value="${liferay-cli.app.server.parent.dir}" />
			<entry key="project.name" value="${project.name}" />
		</propertyfile>
	</target>

	<target name="start">
		<if>
			<not>
				<isset property="project.name" />
			</not>
			<then>
				<fail>
.

Failed to start server. Please select a project.

Usage: select-project &lt;project.name&gt;
				</fail>
			</then>
		</if>

		<propertycopy from="app.server.${app.server.type}.dir" name="app.server.dir" override="true" />

		<if>
			<not>
				<available file="${app.server.dir}" type="dir" />
			</not>
			<then>
				<fail>
.

Failed to start server. Please install an application server.

Usage: install &lt;app.server.type&gt;
				</fail>
			</then>
		</if>

		<switch value="${app.server.type}">
			<case value="geronimo">
				<exec dir="." executable="cmd" osfamily="winnt">
					<arg line="/c '${app.server.dir}/bin/geronimo.bat run'" />
				</exec>

				<exec dir="." executable="sh" osfamily="unix">
					<arg line="-c '${app.server.dir}/bin/geronimo.sh run'" />
				</exec>
			</case>
			<case value="glassfish">
				<exec dir="." executable="cmd" osfamily="winnt">
					<arg line="/c '${app.server.dir}/bin/asadmin.bat start-domain --verbose'" />
				</exec>

				<exec dir="." executable="sh" osfamily="unix">
					<arg line="-c '${app.server.dir}/bin/asadmin start-domain --verbose'" />
				</exec>
			</case>
			<case value="jboss">
					<exec dir="." executable="cmd" osfamily="winnt">
						<arg line="/c '${app.server.dir}/bin/standalone.bat'" />
					</exec>

					<exec dir="." executable="sh" osfamily="unix">
						<arg line="-c '${app.server.dir}/bin/standalone.sh'" />
					</exec>
			</case>
			<case value="jetty">
					<exec dir="." executable="cmd" osfamily="winnt">
						<arg line="/c '${app.server.dir}/bin/run.bat'" />
					</exec>

					<exec dir="." executable="sh" osfamily="unix">
						<arg line="-c '${app.server.dir}/bin/run.sh'" />
					</exec>
			</case>
			<case value="jonas">
					<exec dir="." executable="cmd" osfamily="winnt">
						<arg line="/c '${app.server.dir}/bin/jonas.bat start'" />
					</exec>

					<exec dir="." executable="sh" osfamily="unix">
						<arg line="-c '${app.server.dir}/bin/jonas start'" />
					</exec>
			</case>
			<case value="resin">
					<exec dir="." executable="cmd" osfamily="winnt">
						<arg line="/c '${app.server.dir}/bin/run.bat'" />
					</exec>

					<exec dir="." executable="sh" osfamily="unix">
						<arg line="-c '${app.server.dir}/bin/run.sh'" />
					</exec>
			</case>
			<case value="tomcat">
				<exec dir="." executable="cmd" osfamily="winnt">
					<arg line="/c '${app.server.dir}/bin/catalina.bat run'" />
				</exec>

				<exec dir="." executable="sh" osfamily="unix">
					<arg line="-c '${app.server.dir}/bin/catalina.sh run'" />
				</exec>
			</case>
		</switch>
	</target>
</project>