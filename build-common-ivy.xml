<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-common-ivy" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="ivy.home" value="${project.location.absolute}/.ivy" />
	<property name="ivy.install.version" value="2.2.0" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />

	<path id="beanshell.classpath">
		<fileset dir="${app.server.lib.global.dir}" includes="*.jar" />
		<fileset dir="${app.server.lib.portal.dir}" includes="*.jar" />
		<fileset dir="${project.dir}/lib" includes="*.jar" />
	</path>

	<checksum file="${project.dir}/ivy.xml" />

	<script classpathref="beanshell.classpath" language="beanshell">
		<![CDATA[

			// LPS-33549

			threadLocalsField = Thread.class.getDeclaredField("threadLocals");

			threadLocalsField.setAccessible(true);

			threadLocalMap = threadLocalsField.get(Thread.currentThread());

			if (threadLocalMap != null) {
				threadLocalMapClass = Class.forName("java.lang.ThreadLocal$ThreadLocalMap");

				expungeStaleEntriesMethod = threadLocalMapClass.getDeclaredMethod("expungeStaleEntries", null);

				expungeStaleEntriesMethod.setAccessible(true);

				expungeStaleEntriesMethod.invoke(threadLocalMap, null);

				tableField = threadLocalMapClass.getDeclaredField("table");

				tableField.setAccessible(true);

				for (Object entry : tableField.get(threadLocalMap)) {
					if (entry == null) {
						continue;
					}

					entryClass = entry.getClass();

					valueField = entryClass.getDeclaredField("value");

					valueField.setAccessible(true);

					stack = valueField.get(entry);

					if ((stack instanceof Stack) && !stack.isEmpty()) {
						topElement = stack.peek();

						topElementClass = topElement.getClass();

						if (topElementClass.getName().equals("org.apache.ivy.core.IvyContext")) {
							stack.clear();
						}
					}
				}
			}

			// Only show messages if ivy.xml has been updated in the last 5
			// seconds

			ivyXMLMD5File = new File(project.getProperty("project.location.absolute") + "/ivy.xml.MD5");

			if ((System.currentTimeMillis() - 5000) > ivyXMLMD5File.lastModified()) {
				buildListeners = project.getBuildListeners();

				defaultLogger = buildListeners.firstElement();

				defaultLogger.setMessageOutputLevel(project.MSG_WARN);
			}
		]]>
	</script>

	<mkdir dir="${ivy.jar.dir}" />

	<script classpathref="beanshell.classpath" language="beanshell">
		<![CDATA[
			import org.apache.tools.ant.taskdefs.Get;

			String ivyInstallVersion = project.getProperty("ivy.install.version");
			String ivyJarDir = project.getProperty("ivy.jar.dir");

			File file = new File(ivyJarDir + "/ivy-" + ivyInstallVersion + ".jar");

			if (!file.exists()) {
				Get get = project.createTask("get");

				get.setDest(file);

				URL url = new URL("http://repo2.maven.org/maven2/org/apache/ivy/ivy/" + ivyInstallVersion + "/ivy-" + ivyInstallVersion + ".jar");

				get.setSrc(url);

				get.perform();
			}
		]]>
	</script>

	<path id="ivy.lib.path">
		<fileset
			dir="${ivy.jar.dir}"
			includes="ivy-${ivy.install.version}.jar"
		/>
	</path>

	<taskdef classpathref="ivy.lib.path" resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" />

	<ivy:settings file="${project.dir}/ivy-settings.xml" />

	<ivy:resolve
		file="${project.dir}/ivy.xml"
		log="download-only"
	/>

	<script classpathref="beanshell.classpath" language="beanshell">
		buildListeners = project.getBuildListeners();

		defaultLogger = buildListeners.firstElement();

		defaultLogger.setMessageOutputLevel(project.MSG_INFO);
	</script>
</project>