<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-common-module">
	<dirname file="${ant.file.build-common-module}" property="plugin.type.dir" />
	<property location="${plugin.type.dir}/.." name="project.dir" />

	<import file="../build-common-plugin.xml" />

	<taskdef classpathref="lib.classpath" resource="aQute/bnd/ant/taskdef.properties" />

	<path id="module.classpath">
		<path refid="portal.classpath" />
		<path refid="plugin.classpath" />
		<fileset dir="lib" erroronmissingdir="false" includes="*.jar" />
		<fileset dir="osgi-lib" erroronmissingdir="false" includes="*.jar" />
		<fileset dir="${project.dir}/lib" includes="bnd.jar" />
		<pathelement location="${classes.dir}" />
	</path>

	<macrodef name="manifest-helper">
		<attribute name="analyze" default="false" />

		<sequential>
			<taskdef
				classname="com.liferay.util.ant.ManifestHelperTask"
				classpathref="module.classpath"
				name="liferay-manifest-helper"
			/>

			<liferay-manifest-helper
				analyze="@{analyze}"
				classpathref="project.classpath"
			/>
		</sequential>
	</macrodef>

	<target name="clean">
		<delete dir="${classes.dir}" />
		<delete file="${jar.file}.jar" failonerror="false" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />

		<copy todir="${classes.dir}">
			<fileset dir="${sources.dir}" excludes="**/*.java" />
		</copy>

		<for list="${import.shared}" param="import.shared.current">
			<sequential>
				<if>
					<available file="${project.dir}/shared/@{import.shared.current}/src" />
					<then>
						<ant dir="${project.dir}/shared/@{import.shared.current}" target="jar" inheritAll="false" />

						<for param="import.shared.full.path">
							<path>
								<fileset dir="${project.dir}/dist" includes="@{import.shared.current}-${lp.version}.1*.jar" />
							</path>
							<sequential>
								<copy
									file="@{import.shared.full.path}"
									tofile="lib/@{import.shared.current}.jar"
								/>
							</sequential>
						</for>

						<if>
							<available file="${project.dir}/shared/@{import.shared.current}/lib" />
							<then>
								<copy todir="lib/">
									<fileset dir="${project.dir}/shared/@{import.shared.current}/lib" includes="*.jar" />
								</copy>
							</then>
						</if>
					</then>
				</if>
			</sequential>
		</for>

		<for list="${import.module}" param="import.module.current">
			<sequential>
				<if>
					<available file="${project.dir}/modules/@{import.module.current}" />
					<then>
						<ant dir="${project.dir}/modules/@{import.module.current}" target="jar" inheritAll="false" />

						<for param="import.module.full.path">
							<path>
								<fileset dir="${project.dir}/dist" includes="@{import.module.current}*.jar" />
							</path>

							<sequential>
								<copy
									file="@{import.module.full.path}"
									tofile="osgi-lib/@{import.module.current}.jar"
								/>
							</sequential>
						</for>

						<if>
							<available file="${project.dir}/modules/@{import.module.current}/osgi-lib" />
							<then>
								<copy todir="modules">
									<fileset dir="${project.dir}/modules/@{import.module.current}/osgi-lib" includes="*.jar" />
								</copy>
							</then>
						</if>
					</then>
				</if>
			</sequential>
		</for>

		<antcall target="compile-java">
			<param name="javac.classpathref" value="module.classpath" />
			<param name="javac.destdir" value="${classes.dir}" />
			<param name="javac.srcdir" value="${sources.dir}" />
		</antcall>
	</target>

	<target name="deploy" depends="jar">
		<copy file="${jar.file}.jar" todir="${osgi.auto.deploy.dir}" />
		<copy file="osgi-lib/*.jar" todir="${osgi.auto.deploy.dir}" />
	</target>

	<target name="manifest">
		<if>
			<not>
				<available file="${classes.dir}/META-INF/MANIFEST.MF" />
			</not>
			<then>
				<manifest-helper analyze="true" />

				<mkdir dir="${classes.dir}/META-INF" />

				<tstamp>
					<format property="build.time" pattern="EEE MMM d HH:mm:ss z yyyy" />
				</tstamp>

				<manifest file="${classes.dir}/META-INF/MANIFEST.MF">
					<attribute name="Bundle-ManifestVersion" value="2" />
					<attribute name="Bundle-RequiredExecutionEnvironment" value="J2SE-1.5" />
					<attribute name="Bundle-Vendor" value="${release.info.vendor}" />
					<attribute name="Bundle-Version" value="${release.info.version}" />
					<attribute name="Export-Package" value="${export.packages}" />
					<attribute name="Import-Package" value="${import.packages}" />
					<attribute name="Javac-Compiler" value="${javac.compiler}" />
					<attribute name="Javac-Debug" value="${javac.debug}" />
					<attribute name="Javac-Deprecation" value="${javac.deprecation}" />
					<attribute name="Javac-Encoding" value="${javac.encoding}" />
					<attribute name="Jsp-Precompile" value="${jsp.precompile}" />
					<attribute name="Liferay-Portal-Build-Date" value="${release.info.build.date}" />
					<attribute name="Liferay-Portal-Build-Number" value="${release.info.build.number}" />
					<attribute name="Liferay-Portal-Build-Revision" value="${build.revision}" />
					<attribute name="Liferay-Portal-Build-Time" value="${build.time}" />
					<attribute name="Liferay-Portal-Code-Name" value="${release.info.code.name}" />
					<attribute name="Liferay-Portal-Parent-Build-Number" value="${release.info.parent.build.number}" />
					<attribute name="Liferay-Portal-Release-Info" value="${release.info.release.info}" />
					<attribute name="Liferay-Portal-Server-Info" value="${release.info.server.info}" />
					<attribute name="Liferay-Portal-Version" value="${release.info.version}" />
				</manifest>

				<if>
					<and>
						<isset property="manifest.bundle.name" />
						<isset property="manifest.bundle.symbolic.name" />
					</and>
					<then>
						<manifest file="${classes.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Bundle-Name" value="${manifest.bundle.name}" />
							<attribute name="Bundle-SymbolicName" value="${manifest.bundle.symbolic.name}" />
						</manifest>
					</then>
				</if>

				<if>
					<isset property="manifest.premain.class" />
					<then>
						<manifest file="${classes.dir}/META-INF/MANIFEST.MF" mode="update">
							<attribute name="Can-Redefine-Classes" value="${manifest.can.redefine.classes}" />
							<attribute name="Can-Retransform-Classes" value="${manifest.can.retransform.classes}" />
							<attribute name="Premain-Class" value="${manifest.premain.class}" />
						</manifest>
					</then>
				</if>
			</then>
		</if>
	</target>


	<target name="jar" depends="compile">
		<if>
			<not>
				<uptodate targetfile="${jar.file}.jar">
					<srcfiles dir="${classes.dir}" includes="**/*.*"/>
				</uptodate>
			</not>
			<then>
				<if>
					<available file="bnd.bnd" />
					<then>
						<manifest-helper />

						<bndexpand propertyfile="${project.dir}/modules/common.bnd" />

						<bnd
							eclipse="false"
							exceptions="true"
							failok="false"
							inherit="true"
							output="${project.dir}/dist/${jar.file}.jar"
							sourcepath="."
						>
							<bndfiles path="bnd.bnd" />
							<classpath>
								<pathelement location="${classes.dir}" />
							</classpath>
						</bnd>
					</then>
					<else>
						<antcall target="manifest" />

						<jar
							basedir="${classes.dir}"
							jarfile="${project.dir}/dist/${jar.file}.jar"
							manifest="${classes.dir}/META-INF/MANIFEST.MF"
						>
							<fileset dir="." includes="lib/*.jar" />
						</jar>
					</else>
				</if>
			</then>
		</if>
	</target>

	<target name="war">
		<antcall target="jar" />
	</target>
</project>
